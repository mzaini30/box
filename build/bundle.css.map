{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Beranda.svelte",
    "Cari.svelte",
    "Tampil.svelte"
  ],
  "sourcesContent": [
    "<div class=\"container\">\n\t<br>\n\t<h1 class=\"text-center\">Box</h1>\n\t<hr>\n\t<form on:submit|preventDefault={mulaiCari}>\n\t\t<div class=\"form-group\">\n\t\t\t<input type=\"search\" class=\"form-control\" placeholder=\"Cari apa?\" bind:value={cari} name=\"\" required>\n\t\t</div>\n\t</form>\n\t<div class=\"list-group\">\n\t\t{#each data as x}\n\t\t\t<a href=\"#/{x.slug}\" class=\"list-group-item list-group-item-action\">{x.judul}</a>\n\t\t{/each}\n\t</div>\n</div>\n<div class=\"bawah\">\n\t<a href=\"#/tulis\" class=\"btn btn-info\">&#9998;</a>\n</div>\n<script type=\"text/javascript\">\n\timport {onMount} from 'svelte'\n\timport {push} from 'svelte-spa-router'\n\timport {cekPassword} from '../cekPassword.js'\n\timport {apiData} from '../api.js'\n\tlet data = []\n\tlet cari = ''\n\tonMount(() => {\n\t\tcekPassword()\n\t\tfetch(apiData).then(x => x.json()).then(x => {\n\t\t\tdata = x.reverse()\n\t\t})\n\t})\n\tconst mulaiCari = () => {\n\t\tpush(`/cari/${encodeURIComponent(cari)}`)\n\t}\n</script>\n<style type=\"text/css\">\n\t.list-group {\n\t\tmargin-bottom: 80px;\n\t}\n</style>\n<svelte:head>\n\t<title>Box</title>\n</svelte:head>",
    "<div class=\"container\">\n\t<br>\n\t<h1 class=\"text-center\">Cari</h1>\n\t<hr>\n\t<form on:submit|preventDefault={mulaiCari}>\n\t\t<div class=\"form-group\">\n\t\t\t<input type=\"search\" class=\"form-control\" placeholder=\"Cari apa?\" bind:value={cari} bind:this={elCari} name=\"\" required>\n\t\t</div>\n\t</form>\n\t<div class=\"list-group\">\n\t\t{#each data as x}\n\t\t\t<a href=\"#/{x.slug}\" class=\"list-group-item list-group-item-action\">{x.judul}</a>\n\t\t{/each}\n\t</div>\n</div>\n<div class=\"bawah\">\n\t<a href=\"#/\" class=\"btn btn-info\">&#9750;</a>\n</div>\n<script type=\"text/javascript\">\n\timport {onMount} from 'svelte'\n\timport {push} from 'svelte-spa-router'\n\timport {cekPassword} from '../cekPassword.js'\n\timport {apiData} from '../api.js'\n\texport let params\n\tlet data = []\n\tlet cari = ''\n\tlet elCari\n\tonMount(() => {\n\t\tcekPassword()\n\t\telCari.focus()\n\t\tcari = decodeURIComponent(params.cari)\n\t})\n\t$: if (params){\n\t\tlet yangDicari = decodeURIComponent(params.cari)\n\t\tfetch(apiData).then(x => x.json()).then(x => {\n\t\t\tdata = x.reverse().filter(y => y.judul.toLowerCase().includes(yangDicari.toLowerCase()) || y.isi.toLowerCase().includes(yangDicari.toLowerCase()))\n\t\t\tif (data.length == 0) {\n\t\t\t\tdata = [{\n\t\t\t\t\tslug: '',\n\t\t\t\t\tjudul: `${yangDicari} tidak ditemukan`\n\t\t\t\t}]\n\t\t\t}\n\t\t})\n\t}\n\tconst mulaiCari = () => {\n\t\tpush(`/cari/${encodeURIComponent(cari)}`)\n\t}\n</script>\n<style type=\"text/css\">\n\t.list-group {\n\t\tmargin-bottom: 80px;\n\t}\n</style>\n<svelte:head>\n\t<title>Cari {decodeURIComponent(params.cari)}</title>\n</svelte:head>",
    "<div class=\"container\">\n\t<br>\n\t<h1 class=\"text-center\">{data.judul}</h1>\n\t<hr>\n\t<p><code>{data.waktu}</code></p>\n\t<div class=\"isinya\">\n\t\t{@html data.isi}\n\t</div>\n</div>\n<div class=\"bawah\">\n\t<div on:click={hapus} class=\"btn btn-danger\">&times;</div>\n\t<a href=\"#/{params.slug}/edit\" class=\"btn btn-warning\">&#9997;</a>\n\t<a href=\"#/\" class=\"btn btn-success\">&#9750;</a>\n</div>\n<script type=\"text/javascript\">\n\timport {onMount} from 'svelte'\n\timport {apiData} from '../api.js'\n\timport {cekPassword} from '../cekPassword.js'\n\timport {push} from 'svelte-spa-router'\n\texport let params\n\tlet data = {\n\t\tjudul: '',\n\t\twaktu: '',\n\t\tisi: ''\n\t}\n\tconst hapus = () => {\n\t\tlet tanya = confirm('Hapus kah?')\n\t\tif (tanya) {\n\t\t\tfetch(apiData).then(x => x.json()).then(z => {\n\t\t\t\tz = z.filter(y => y.slug != params.slug)\n\t\t\t\tlet body = new FormData\n\t\t\t\tbody.append('json', JSON.stringify(z))\n\t\t\t\tfetch(`${apiData}/ubah`, {\n\t\t\t\t\tmethod: 'post',\n\t\t\t\t\tbody\n\t\t\t\t}).then(() => push('/'))\n\t\t\t})\n\t\t}\n\t}\n\tonMount(() => {\n\t\tcekPassword()\n\t\tfetch(apiData).then(x => x.json()).then(x => {\n\t\t\tx = x.filter(y => y.slug == params.slug)\n\t\t\tdata = x[0]\n\t\t\tdata.isi = marked(x[0].isi)\n\t\t})\n\t})\n</script>\n<style type=\"text/css\">\n\t.isinya {\n\t\tmargin-bottom: 75px;\n\t}\n</style>\n<svelte:head>\n\t<title>{data.judul}</title>\n</svelte:head>"
  ],
  "names": [],
  "mappings": "AAoCC,WAAW,cAAC,CAAC,AACZ,aAAa,CAAE,IAAI,AACpB,CAAC;ACWD,WAAW,cAAC,CAAC,AACZ,aAAa,CAAE,IAAI,AACpB,CAAC;ACFD,OAAO,cAAC,CAAC,AACR,aAAa,CAAE,IAAI,AACpB,CAAC"
}